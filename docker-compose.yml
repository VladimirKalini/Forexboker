services:
  db:
    image: mysql:8.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             gunicorn --workers 4 --bind 0.0.0.0:8000 main:app"
    volumes:
      - django_static:/app/staticfiles
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy

  backend_admin:
    build:
      context: ./django_adminFX-master
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - django_static:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - django_static:/var/www/static:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - backend_admin

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  mysql_data:
  django_static:
root@vm15266158:/var/www/forexbroker#
